/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "aliases.h" //file contains aliases for most symbols for the danish language

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    macros {
        kp_dk_LBKT: kp_dk_LBKT {
            label = "kp_dk_LBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_RBKT: kp_dk_RBKT {
            label = "kp_dk_RBKT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_LBRC: kp_dk_LBRC {
            label = "kp_dk_LBRC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_RBRC: kp_dk_RBRC {
            label = "kp_dk_RBRC";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp RALT>;
        };

        copy: copy {
            label = "copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        dk_paste: dk_paste {
            label = "dk_paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        del_word: del_word {
            label = "del_word";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        kp_dk_BLSH: kp_dk_BLSH {
            label = "kp_dk_BLSH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp NON_US_BACKSLASH>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_PIPE: kp_dk_PIPE {
            label = "kp_dk_PIPE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RALT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp RALT>;
        };

        kp_dk_UNDER: kp_dk_UNDER {
            label = "kp_dk_UNDER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&kp FSLH>,
                <&macro_release>,
                <&kp LSHIFT>;
        };

        mod_left: mod_left {
            label = "mod_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_up: mod_up {
            label = "mod_up";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_right: mod_right {
            label = "mod_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        mod_down: mod_down {
            label = "mod_down";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  Å  |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Æ  |  Ø  |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  | GUI | ALT |
            //                    | GUI | LWR | SPC |   | ENT | SPACE| ALT |

            display-name="Base";
            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P         &none
&none  &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp LBKT      &none
&none  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp SEMI       &kp SQT  &kp KP_COMMA  &none
                     &sk LSHFT  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp BACKSPACE
            >;
        };

        num_char {
            // -----------------------------------------------------------------------------------------
            // |   +  |  -  |  7  |  8  |  9  |  _  |       |  '  |  [  |  ]  |  /  |  |  |  \  |
            // |   *  |  ^  |  4  |  5  |  6  |  ~  |       |  "  |  {  |  }  |  !  |  @  |  #  |
            // |   ?  |  =  |  1  |  2  |  3  |  ¨  |       |  "  |  (  |  )  |  $  |  %  |  &  |
            //                    |  0  | BSPC| ESC |       | ENT |     |     |

            display-name="Raise";
            bindings = <
&kp DK_plus   &kp DK_minus  &kp N7  &kp N8  &kp N9  &kp_dk_UNDER    &kp DK_sqt  &kp_dk_LBKT  &kp_dk_RBKT  &kp DK_flsh  &kp_dk_PIPE  &kp_dk_BLSH
&kp DK_astrk  &kp DK_caret  &kp N4  &kp N5  &kp N6  &kp TILDE       &kp DK_dqt  &kp DK_lpar  &kp DK_rpar  &kp EXCL     &kp AT       &kp HASH
&kp DK_qmark  &kp DK_equal  &kp N1  &kp N2  &kp N3  &kp LALT        &kp RALT    &kp_dk_LBRC  &kp_dk_RBRC  &kp DK_dllr  &kp PRCNT    &kp AMPS
                                    &kp N0  &none   &kp SPACE       &kp RET     &mo 1        &del_word
            >;
        };

        dir_char {
            // -----------------------------------------------------------------------------------------
            // |     | tab |     |arup |     |     |       |     |      | volup |     |    |    |
            // |     |lshft|arlft|ardwn|arght|     |       |     | home | volup | end |    |    |
            // |     |lctrl|     | copy|paste|     |       |     |      |       |     |    |    |
            //                   |     |     | ESC |       | ENT | space|       |

            display-name="Lower";
            bindings = <
&none  &kp TAB    &none     &kp UP    &none      &none      &none    &none     &kp C_VOL_UP  &none    &none  &none
&none  &kp LSHFT  &kp LEFT  &kp DOWN  &kp RIGHT  &none      &none    &kp HOME  &kp C_VOL_DN  &kp END  &none  &none
&none  &kp LCTRL  &none     &copy     &dk_paste  &none      &none    &none     &none         &none    &none  &none
                            &none     &mo 2      &kp ESC    &kp RET  &none     &none
            >;
        };
    };
};
